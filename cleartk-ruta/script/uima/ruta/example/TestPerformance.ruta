PACKAGE uima.ruta.example;

// import the types of this type system:
TYPESYSTEM org.cleartk.TypeSystem;

DECLARE Annotation Noun(STRING pos);

// define and import an external dictionary containing first names
WORDLIST kwds_time = 'lemmas/time.txt';
WORDLIST kwds_LTD = 'lemmas/LTD.txt';
WORDLIST kwds_constraint = 'lemmas/constraints.txt';
WORDLIST kwds_event = 'lemmas/events.txt';

// define some useful annotations
DECLARE tokenTime, tokenLTD, tokenConstraint, tokenEvent, performanceSentence;

//disambiguation of any word of seconds(time) or any 
Token{Token.pos=="CD"} Token{REGEXP(".*second[s]?")->Token.lemma="#time#"};

//Mark perfomance tokens that matches with the list of taxonomies words
Token{INLIST(kwds_constraint,Token.lemma)->MARK(tokenConstraint)};
Token{INLIST(kwds_time,Token.lemma)->MARK(tokenTime)};
Token{INLIST(kwds_LTD,Token.lemma)->MARK(tokenLTD)};
Token{INLIST(kwds_event,Token.lemma)->MARK(tokenEvent)};

//Identify performance sentences
Sentence{AND(CONTAINS(tokenEvent),CONTAINS(tokenTime))->MARK(performanceSentence)};
Sentence{AND(CONTAINS(tokenEvent),CONTAINS(tokenConstraint))->MARK(performanceSentence)};
Sentence{AND(CONTAINS(tokenEvent),CONTAINS(tokenLTD))->MARK(performanceSentence)};

Sentence{AND(CONTAINS(tokenTime),CONTAINS(tokenConstraint))->MARK(performanceSentence)};
Sentence{AND(CONTAINS(tokenLTD),CONTAINS(tokenConstraint))->MARK(performanceSentence)};
